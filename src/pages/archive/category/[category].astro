---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import Aside from '../../../layouts/Aside.astro';
import CardItem from '../../../components/CardItem.astro';

const blog = await getCollection('blog');

export async function getStaticPaths() {
  const blog = await getCollection('blog');
  const categoriesSet = new Set();
  blog.forEach((post) => {
    categoriesSet.add(post.data.category);
  });
  const cateArray = Array.from(categoriesSet);
  return cateArray.map((category) => ({
    params: { category },
  }));
}

const { category } = Astro.params;

const avaliableCurrentCategoryPosts = blog
  .filter((post) => post.data.category === category)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<Layout>
  <!-- Main content wrapper with same layout as index.astro -->
  <div class="relative max-w-[var(--page-width)] mx-auto">
    <div class="transition duration-700 w-full grid grid-cols-[17.5rem_auto] grid-rows-[auto_1fr_auto] lg:grid-rows-[auto] mx-auto gap-4">
      <Aside />
      <!-- mobile nav -->
      <main class="col-span-2 lg:col-span-1 p-0 overflow-hidden">
        <div class="onload-animation">
          <section class="space-y-3 sm:space-y-4">
      <!-- Header -->
      <div class="bg-white dark:bg-zinc-900 rounded-xl shadow-sm dark:shadow-gray-900/20 p-3 sm:p-4 md:p-6">
        <nav class="flex items-center gap-1 sm:gap-2 text-xs sm:text-sm text-neutral-500 dark:text-neutral-400 mb-3 sm:mb-4">
          <a href="/archive/" class="hover:text-sky-600 dark:hover:text-sky-400 transition-colors">
            Archive
          </a>
          <svg width="12" height="12" viewBox="0 0 24 24" fill="currentColor" class="sm:w-4 sm:h-4">
            <path d="M8.59 16.58L13.17 12L8.59 7.41L10 6L16 12L10 18L8.59 16.58Z"/>
          </svg>
          <a href="/archive/category/" class="hover:text-sky-600 dark:hover:text-sky-400 transition-colors">
            Categories
          </a>
          <svg width="12" height="12" viewBox="0 0 24 24" fill="currentColor" class="sm:w-4 sm:h-4">
            <path d="M8.59 16.58L13.17 12L8.59 7.41L10 6L16 12L10 18L8.59 16.58Z"/>
          </svg>
          <span class="text-zinc-900 dark:text-zinc-100 font-medium">{category}</span>
        </nav>
        
        <div class="flex items-center gap-2 sm:gap-3 mb-1 sm:mb-2">
          <div class="p-1.5 sm:p-2 bg-sky-100 dark:bg-sky-900/20 rounded-lg">
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="text-sky-600 dark:text-sky-400 sm:w-6 sm:h-6">
              <path d="M22 19a2 2 0 01-2 2H4a2 2 0 01-2-2V5a2 2 0 012-2h5l2 3h9a2 2 0 012 2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </div>
          <div>
            <h1 class="text-lg sm:text-xl md:text-2xl lg:text-3xl font-bold text-zinc-900 dark:text-zinc-100">{category}</h1>
            <p class="text-xs sm:text-sm text-neutral-500 dark:text-neutral-400">{avaliableCurrentCategoryPosts.length} posts in this category</p>
          </div>
        </div>
      </div>

      <!-- Posts List -->
      <div>
        {avaliableCurrentCategoryPosts.map((post) => (
          <CardItem 
            slug={post.slug}
            title={post.data.title}
            heroImage={post.data.heroImage || ''}
            pubDate={post.data.pubDate}
            category={post.data.category}
            tags={post.data.tags}
            description={post.data.description}
            content={post.body}
          />
        ))}
      </div>
          </section>
        </div>
      </main>
    </div>
  </div>
</Layout>
