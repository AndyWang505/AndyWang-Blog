---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import Aside from '../layouts/Aside.astro';
import CardItem from '../components/CardItem.astro';
import Pagination from '../components/Pagination.astro';

interface PageProps {
  size: number;
  currentPage: number;
  total: number;
  data: any[];
}

const blog = await getCollection('blog');

const postsWithContent = await Promise.all(
  blog.map(async (post) => {
    const { Content } = await post.render();
    return {
      ...post,
      content: post.body
    };
  })
);

const posts = postsWithContent.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const blog = await getCollection('blog');
  
  const postsWithContent = await Promise.all(
    blog.map(async (post) => {
      const { Content } = await post.render();
      return {
        ...post,
        content: post.body
      };
    })
  );
  
  const posts = postsWithContent.sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );
  
  return paginate(posts, {
    pageSize: 10,
  });
}

const { page } = Astro.props as { page: PageProps };

const postsPerPage = page.size;
const currentPage = page.currentPage;
const totalPages = Math.ceil(page.total / postsPerPage);
const paginatedPosts = page.data;
---

<Layout>
  <!-- Main content wrapper layout -->
  <div class="relative max-w-[var(--page-width)] mx-auto">
    <div class="transition duration-700 w-full grid grid-cols-[17.5rem_auto] grid-rows-[auto_1fr_auto] lg:grid-rows-[auto] mx-auto gap-4">
      <Aside />
      
      <main class="col-span-2 lg:col-span-1 p-0 overflow-hidden">
        <div class="onload-animation">
          <section>
            <ul>
              {paginatedPosts.map((post: any) => (
                <CardItem
                  slug={post.slug}
                  title={post.data.title}
                  heroImage={post.data.heroImage}
                  pubDate={post.data.pubDate}
                  category={post.data.category}
                  tags={post.data.tags}
                  description={post.data.description}
                  content={post.content}
                />
              ))}
            </ul>
            
            <Pagination
              currentPage={currentPage}
              totalPages={totalPages}
              baseUrl=""
            />
          </section>
        </div>
      </main>
    </div>
  </div>
</Layout>
