---
// src/components/TableOfContents.astro
interface Heading {
  depth: number;
  slug: string;
  text: string;
}

const { headings } = Astro.props;

// only get h2 and h3
const toc = headings.filter((heading: Heading) => heading.depth <= 3);
---

<nav class="bg-white dark:bg-zinc-800 rounded-lg drop-shadow p-6">
  <h3 class="mb-4 flex items-center gap-1.5 dark:text-neutral-300">
    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M21 5L10 5M21 19L10 19M21 12L10 12M6 5C6 5.82843 5.32843 6.5 4.5 6.5C3.67157 6.5 3 5.82843 3 5C3 4.17157 3.67157 3.5 4.5 3.5C5.32843 3.5 6 4.17157 6 5ZM6 19C6 19.8284 5.32843 20.5 4.5 20.5C3.67157 20.5 3 19.8284 3 19C3 18.1716 3.67157 17.5 4.5 17.5C5.32843 17.5 6 18.1716 6 19ZM6 12C6 12.8284 5.32843 13.5 4.5 13.5C3.67157 13.5 3 12.8284 3 12C3 11.1716 3.67157 10.5 4.5 10.5C5.32843 10.5 6 11.1716 6 12Z"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"></path>
    </svg>
    Table of Contents
  </h3>
  <ul class="space-y-2">
    {
      toc.map((heading: Heading) => (
        <li class={`toc-item depth-${heading.depth}`}>
          <a
            href={`#${heading.slug}`}
            class="text-sm text-neutral-500 dark:text-neutral-400 hover:text-neutral-800 dark:hover:text-neutral-200 transition-all duration-200 block hover:translate-x-1"
            data-heading-id={heading.slug}
          >
            {heading.text}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<style>
  .toc-item {
    @apply transition-all duration-200;
  }

  .toc-item.depth-2 {
    @apply pl-4;
  }

  .toc-item.depth-3 {
    @apply pl-8;
  }

  .toc-item a.active {
    @apply text-neutral-800 dark:text-neutral-200 font-medium;
  }
</style>

<script>
  // get all heading elements
  const headings = document.querySelectorAll('h2[id], h3[id]');
  const tocLinks = document.querySelectorAll('.toc-item a');

  // create an IntersectionObserver to watch the visibility of the headings
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          tocLinks.forEach((link) => link.classList.remove('active'));

          // find the link that matches the heading id
          const activeLink = document.querySelector(
            `.toc-item a[data-heading-id="${entry.target.id}"]`
          );
          if (activeLink) {
            activeLink.classList.add('active');
          }
        }
      });
    },
    {
      rootMargin: '-50% 0px -50% 0px',
      threshold: 0,
    }
  );

  headings.forEach((heading) => observer.observe(heading));
</script>
