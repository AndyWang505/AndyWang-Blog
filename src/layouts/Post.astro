---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import Layout from './Layout.astro';
import Aside from './Aside.astro';
import MobileNav from '../components/MobileNav.astro';
import BaseHead from '../components/BaseHead.astro';

interface Props {
  entry: CollectionEntry<'blog'>;
}

const { entry } = Astro.props;
const { title, pubDate, updatedDate, heroImage, description, category, tags } = entry.data;

const blog = await getCollection('blog');
// Tags
const tagsSet = new Set();
blog.forEach((post) => {
  post.data.tags.forEach((tag) => {
    tagsSet.add(tag);
  });
});

// Get headings from the ToC
const { headings } = await entry.render();
---

<Layout title={title} image={heroImage} description={description}>
  <!-- Main content wrapper with fuwari-style layout -->
  <div class="relative max-w-[var(--page-width)] mx-auto">
    <div class="w-full grid grid-cols-[17.5rem_auto] grid-rows-[auto_1fr_auto] lg:grid-rows-[auto] mx-auto gap-4">
      <Aside headings={headings} />
      <MobileNav />
      
      <main class="col-span-2 lg:col-span-1 p-0 overflow-hidden">
        <div class="onload-animation">
          <article class="bg-white shadow-lg rounded-xl p-8 dark:bg-zinc-900 border border-gray-100/50 dark:border-zinc-700/50">
      <h1 class="text-4xl font-bold mb-6 dark:text-zinc-100 bg-gradient-to-r from-gray-900 to-gray-700 dark:from-zinc-100 dark:to-zinc-300 bg-clip-text text-transparent leading-tight">{title}</h1>
      <!-- metadata - 使用 CardItem 的樣式 -->
      <div class="flex flex-wrap text-gray-500 dark:text-gray-400 items-center gap-3 md:gap-5 mb-8 p-4 bg-gray-100/70 dark:bg-zinc-800/30 rounded-lg border border-gray-300/50 dark:border-zinc-700/30 shadow-sm">
        <!-- publish date -->
        <div class="flex items-center">
          <div class="flex items-center justify-center w-6 h-6 bg-gray-100 dark:bg-gray-500/20 rounded-md mr-1.5">
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-600 dark:text-gray-400">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
          </div>
          <span class="text-sm font-medium"><FormattedDate date={pubDate} /></span>
          {
            updatedDate && (
              <span class="ml-2 text-xs opacity-70">
                (Updated: <FormattedDate date={updatedDate} />)
              </span>
            )
          }
        </div>

        <!-- categories -->
        <div class="flex items-center">
          <div class="flex items-center justify-center w-6 h-6 bg-sky-100 dark:bg-sky-900/20 rounded-md mr-1.5">
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-sky-600 dark:text-sky-400">
              <path d="M22 19a2 2 0 01-2 2H4a2 2 0 01-2-2V5a2 2 0 012-2h5l2 3h9a2 2 0 012 2z"></path>
            </svg>
          </div>
          <div class="flex flex-row flex-nowrap items-center">
            <a href={`/archive/category/${category.replace(/\s+/g, '-')}/`} class="text-sm font-medium hover:text-sky-600 dark:hover:text-sky-400 cursor-pointer whitespace-nowrap">
              {category}
            </a>
          </div>
        </div>

        <!-- tags -->
        <div class="flex items-center">
          <div class="flex items-center justify-center w-6 h-6 bg-green-100 dark:bg-green-900/20 rounded-md mr-1.5">
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-600 dark:text-green-400" style="transform: translateY(-0.5px);">
              <path d="M20.59 13.41l-7.17 7.17a2 2 0 01-2.83 0L2 12V2h10l8.59 8.59a2 2 0 010 2.82z"></path>
              <line x1="7" y1="7" x2="7.01" y2="7"></line>
            </svg>
          </div>
          <div class="flex flex-row flex-wrap items-center gap-1">
            {tags && tags.length > 0 && tags.map((tag, i) => (
              <>
                {i > 0 && <div class="mx-1 text-neutral-400 text-sm">/</div>}
                <a href={`/archive/tag/${tag.replace(/\s+/g, '-')}/`} class="text-sm font-medium hover:text-green-600 dark:hover:text-green-400 cursor-pointer whitespace-nowrap">
                  {tag.trim()}
                </a>
              </>
            ))}
          </div>
        </div>
      </div>
      <div class="mx-auto mb-8">
        {heroImage && <img class="w-full block rounded-xl shadow-md border border-gray-200/50 dark:border-zinc-700/50" src={heroImage} alt="" />}
      </div>
            <div class="prose prose-lg dark:text-neutral-300 max-w-none prose-headings:scroll-mt-20 prose-h1:text-3xl prose-h2:text-2xl prose-h3:text-xl prose-headings:font-bold prose-headings:text-gray-900 dark:prose-headings:text-zinc-100 prose-p:text-gray-700 dark:prose-p:text-gray-300 prose-p:leading-relaxed prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-a:no-underline hover:prose-a:underline prose-strong:text-gray-900 dark:prose-strong:text-gray-100 prose-code:text-pink-600 dark:prose-code:text-pink-400 prose-blockquote:border-l-4 prose-blockquote:border-blue-500 prose-blockquote:bg-blue-50/50 dark:prose-blockquote:bg-blue-900/10 prose-blockquote:py-2 prose-blockquote:px-4 prose-blockquote:rounded-r-lg">
              <slot />
            </div>
          </article>
        </div>
      </main>
    </div>
  </div>
</Layout>
