---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import Layout from './Layout.astro';
import Aside from './Aside.astro';
import RelatedPosts from '../components/RelatedPosts.astro';

interface Props {
  entry: CollectionEntry<'blog'>;
}

const { entry } = Astro.props;
const { title, pubDate, updatedDate, heroImage, description, category, tags } = entry.data;

const blog = await getCollection('blog');
// Tags
const tagsSet = new Set();
blog.forEach((post) => {
  post.data.tags.forEach((tag) => {
    tagsSet.add(tag);
  });
});

// Function to find related posts based on tags
function getRelatedPosts(currentPost: CollectionEntry<'blog'>, allPosts: CollectionEntry<'blog'>[], limit = 4) {
  const currentTags = currentPost.data.tags || [];
  const currentCategory = currentPost.data.category;

  // Filter out current post and calculate similarity score
  const relatedPosts = allPosts
    .filter(post => post.slug !== currentPost.slug)
    .map(post => {
      let score = 0;
      const postTags = post.data.tags || [];
      const postCategory = post.data.category;

      // Calculate tag similarity (each matching tag = +1 point)
      const matchingTags = currentTags.filter(tag => postTags.includes(tag));
      score += matchingTags.length * 2;

      // Bonus for same category (+1 point)
      if (postCategory === currentCategory) {
        score += 1;
      }

      return { post, score };
    })
    .filter(item => item.score > 0) // Only include posts with some similarity
    .sort((a, b) => b.score - a.score) // Sort by similarity score (descending)
    .slice(0, limit) // Take top N posts
    .map(item => item.post);

  return relatedPosts;
}

// Get related posts
const relatedPosts = getRelatedPosts(entry, blog);

// Get headings from the ToC
const { headings } = await entry.render();
---

<Layout title={title} image={heroImage} description={description}>
  <!-- Main content wrapper layout -->
  <div class="relative max-w-[var(--page-width)] mx-auto">
    <div class="w-full grid grid-cols-[17.5rem_auto] grid-rows-[auto_1fr_auto] lg:grid-rows-[auto] mx-auto gap-4">
      <Aside headings={headings} />
      <main class="col-span-2 lg:col-span-1 p-0 rounded-xl border border-gray-100/50 dark:border-zinc-700/50 overflow-hidden">
        <div class="onload-animation">
          <article class="bg-white shadow-lg dark:bg-zinc-900 px-2 py-3 sm:px-4 sm:py-4 md:px-8 md:py-8">
      <h1 class="text-xl sm:text-2xl md:text-3xl lg:text-4xl font-bold mb-3 sm:mb-4 md:mb-6 dark:text-zinc-100 bg-gradient-to-r from-gray-900 to-gray-700 dark:from-zinc-100 dark:to-zinc-300 bg-clip-text text-transparent leading-tight">{title}</h1>
      <!-- metadata - 使用 CardItem 的樣式 -->
      <div class="flex flex-wrap text-gray-500 dark:text-gray-400 items-center gap-1.5 sm:gap-2 md:gap-3 lg:gap-5 mb-3 sm:mb-4 md:mb-6 lg:mb-8 p-2 sm:p-3 md:p-4 bg-gray-100/70 dark:bg-zinc-800/30 rounded-lg border border-gray-300/50 dark:border-zinc-700/30 shadow-sm text-xs sm:text-sm md:text-base">
        <!-- publish date -->
        <div class="flex items-center">
          <div class="flex items-center justify-center w-4 h-4 sm:w-5 sm:h-5 md:w-6 md:h-6 bg-gray-100 dark:bg-gray-500/20 rounded-md mr-1 sm:mr-1.5">
            <svg width="10" height="10" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-600 dark:text-gray-400 sm:w-3 sm:h-3 md:w-[14px] md:h-[14px]">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
          </div>
          <span class="text-xs sm:text-sm md:text-sm font-medium"><FormattedDate date={pubDate} /></span>
          {
            updatedDate && (
              <span class="ml-1 sm:ml-2 text-xs opacity-70">
                (Updated: <FormattedDate date={updatedDate} />)
              </span>
            )
          }
        </div>

        <!-- categories -->
        <div class="flex items-center">
          <div class="flex items-center justify-center w-4 h-4 sm:w-5 sm:h-5 md:w-6 md:h-6 bg-sky-100 dark:bg-sky-900/20 rounded-md mr-1 sm:mr-1.5">
            <svg width="10" height="10" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-sky-600 dark:text-sky-400 sm:w-3 sm:h-3 md:w-[14px] md:h-[14px]">
              <path d="M22 19a2 2 0 01-2 2H4a2 2 0 01-2-2V5a2 2 0 012-2h5l2 3h9a2 2 0 012 2z"></path>
            </svg>
          </div>
          <div class="flex flex-row flex-nowrap items-center">
            <a href={`/archive/category/${category.replace(/\s+/g, '-')}/`} class="text-xs sm:text-sm md:text-sm font-medium hover:text-sky-600 dark:hover:text-sky-400 cursor-pointer whitespace-nowrap">
              {category}
            </a>
          </div>
        </div>

        <!-- tags -->
        <div class="flex items-center">
          <div class="flex items-center justify-center w-4 h-4 sm:w-5 sm:h-5 md:w-6 md:h-6 bg-green-100 dark:bg-green-900/20 rounded-md mr-1 sm:mr-1.5">
            <svg width="10" height="10" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-600 dark:text-green-400 sm:w-3 sm:h-3 md:w-[14px] md:h-[14px]" style="transform: translateY(-0.5px);">
              <path d="M20.59 13.41l-7.17 7.17a2 2 0 01-2.83 0L2 12V2h10l8.59 8.59a2 2 0 010 2.82z"></path>
              <line x1="7" y1="7" x2="7.01" y2="7"></line>
            </svg>
          </div>
          <div class="flex flex-row flex-wrap items-center gap-0.5 sm:gap-1">
            {tags && tags.length > 0 && tags.map((tag, i) => (
              <>
                {i > 0 && <div class="mx-0.5 sm:mx-1 text-neutral-400 text-xs sm:text-sm">/</div>}
                <a href={`/archive/tag/${tag.replace(/\s+/g, '-')}/`} class="text-xs sm:text-sm md:text-sm font-medium hover:text-green-600 dark:hover:text-green-400 cursor-pointer whitespace-nowrap">
                  {tag.trim()}
                </a>
              </>
            ))}
          </div>
        </div>
      </div>
      <div class="mx-auto mb-4 sm:mb-6 md:mb-8">
        {heroImage && <img class="w-full block rounded-lg sm:rounded-xl shadow-md border border-gray-200/50 dark:border-zinc-700/50" src={heroImage} alt="" />}
      </div>
            <div class="prose max-w-none prose-headings:scroll-mt-20 prose-headings:font-bold prose-headings:text-gray-900 dark:prose-headings:text-zinc-100 prose-p:text-gray-700 prose-p:leading-relaxed prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-a:no-underline hover:prose-a:underline prose-strong:text-gray-900 prose-code:text-pink-600 prose-blockquote:border-l-4 prose-blockquote:border-blue-500 prose-blockquote:bg-blue-50/50 dark:prose-blockquote:bg-blue-900/10 prose-blockquote:py-2 prose-blockquote:px-4 prose-blockquote:rounded-r-lg">
              <slot />
            </div>

            <!-- CC BY-SA 4.0 License -->
            <div class="mt-8 pt-6 border-t border-gray-200 dark:border-zinc-700">
              <div class="flex items-start gap-3 p-4 bg-gray-50 dark:bg-zinc-800/50 rounded-lg">
                <svg class="w-6 h-6 mt-0.5 text-gray-600 dark:text-gray-400 flex-shrink-0" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                </svg>
                <div class="text-sm text-gray-600 dark:text-gray-300 leading-relaxed">
                  <p class="font-medium mb-2">Licensed under CC BY-SA 4.0</p>
                  <p class="mb-1 text-xs text-gray-500 dark:text-gray-400">
                    Unless otherwise noted, content on this site is licensed under
                    <a href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener noreferrer" class="text-blue-600 dark:text-blue-400 hover:underline">CC BY-SA 4.0</a>.
                    You are free to share and adapt with attribution.
                  </p>
                </div>
              </div>
            </div>
          </article>
        </div>
      </main>

      <!-- Related Posts Section - Independent Cards Outside Container -->
      <div class="col-span-2 lg:col-span-1 lg:col-start-2">
        <RelatedPosts relatedPosts={relatedPosts} />
      </div>
    </div>
  </div>
</Layout>
