---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import Layout from './Layout.astro';
import Aside from './Aside.astro';
import MobileNav from '../components/MobileNav.astro';
import BaseHead from '../components/BaseHead.astro';

interface Props {
  entry: CollectionEntry<'blog'>;
}

const { entry } = Astro.props;
const { title, pubDate, updatedDate, heroImage, description, category, tags } = entry.data;

const blog = await getCollection('blog');
// Tags
const tagsSet = new Set();
blog.forEach((post) => {
  post.data.tags.forEach((tag) => {
    tagsSet.add(tag);
  });
});

// Get headings from the ToC
const { headings } = await entry.render();
---

<Layout image={heroImage} description={description}>
  <main class="max-w-6xl mx-auto p-3 lg:p-6 lg:flex lg:grid lg:grid-cols-4">
    <article class="lg:col-span-3 bg-white shadow-md rounded-lg p-3 md:p-6 dark:bg-zinc-800">
      <h1 class="text-3xl font-semibold mb-4 dark:text-zinc-100">{title}</h1>
      <div class="block sm:flex items-center gap-1 mb-4">
        <div class="flex gap-1 items-center text-sm text-neutral-500 mr-1 dark:text-zinc-300">
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M21 10H3M16 2V6M8 2V6M7.8 22H16.2C17.8802 22 18.7202 22 19.362 21.673C19.9265 21.3854 20.3854 20.9265 20.673 20.362C21 19.7202 21 18.8802 21 17.2V8.8C21 7.11984 21 6.27976 20.673 5.63803C20.3854 5.07354 19.9265 4.6146 19.362 4.32698C18.7202 4 17.8802 4 16.2 4H7.8C6.11984 4 5.27976 4 4.63803 4.32698C4.07354 4.6146 3.6146 5.07354 3.32698 5.63803C3 6.27976 3 7.11984 3 8.8V17.2C3 18.8802 3 19.7202 3.32698 20.362C3.6146 20.9265 4.07354 21.3854 4.63803 21.673C5.27976 22 6.11984 22 7.8 22Z"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
          </svg>
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        <div class="flex gap-1">
          <span class="flex gap-1 items-center text-sm text-neutral-500 mr-1 dark:text-zinc-300">
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M13 7L11.8845 4.76892C11.5634 4.1268 11.4029 3.80573 11.1634 3.57116C10.9516 3.36373 10.6963 3.20597 10.4161 3.10931C10.0992 3 9.74021 3 9.02229 3H5.2C4.0799 3 3.51984 3 3.09202 3.21799C2.71569 3.40973 2.40973 3.71569 2.21799 4.09202C2 4.51984 2 5.0799 2 6.2V7M2 7H17.2C18.8802 7 19.7202 7 20.362 7.32698C20.9265 7.6146 21.3854 8.07354 21.673 8.63803C22 9.27976 22 10.1198 22 11.8V16.2C22 17.8802 22 18.7202 21.673 19.362C21.3854 19.9265 20.9265 20.3854 20.362 20.673C19.7202 21 18.8802 21 17.2 21H6.8C5.11984 21 4.27976 21 3.63803 20.673C3.07354 20.3854 2.6146 19.9265 2.32698 19.362C2 18.7202 2 17.8802 2 16.2V7Z"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
            {category}
          </span>
          <span class="text-sm text-neutral-500 dark:text-neutral-300">
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M8 8H8.01M2 5.2L2 9.67451C2 10.1637 2 10.4083 2.05526 10.6385C2.10425 10.8425 2.18506 11.0376 2.29472 11.2166C2.4184 11.4184 2.59135 11.5914 2.93726 11.9373L10.6059 19.6059C11.7939 20.7939 12.388 21.388 13.0729 21.6105C13.6755 21.8063 14.3245 21.8063 14.927 21.6105C15.612 21.388 16.2061 20.7939 17.3941 19.6059L19.6059 17.3941C20.7939 16.2061 21.388 15.612 21.6105 14.927C21.8063 14.3245 21.8063 13.6755 21.6105 13.0729C21.388 12.388 20.7939 11.7939 19.6059 10.6059L11.9373 2.93726C11.5914 2.59135 11.4184 2.4184 11.2166 2.29472C11.0376 2.18506 10.8425 2.10425 10.6385 2.05526C10.4083 2 10.1637 2 9.67452 2L5.2 2C4.0799 2 3.51984 2 3.09202 2.21799C2.7157 2.40973 2.40973 2.71569 2.21799 3.09202C2 3.51984 2 4.07989 2 5.2ZM8.5 8C8.5 8.27614 8.27614 8.5 8 8.5C7.72386 8.5 7.5 8.27614 7.5 8C7.5 7.72386 7.72386 7.5 8 7.5C8.27614 7.5 8.5 7.72386 8.5 8Z"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
            {tags.join('ã€‚')}
          </span>
        </div>
      </div>
      <div class="mx-auto mb-6">
        {heroImage && <img class="w-full block" src={heroImage} alt="" />}
      </div>
      <div class="prose md:px-6 dark:text-neutral-300">
        <slot />
      </div>
    </article>
    <Aside headings={headings} isPost={true} />
    <MobileNav />
  </main>
</Layout>
