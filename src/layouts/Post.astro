---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import Layout from './Layout.astro';
import Aside from './Aside.astro';
import MobileNav from '../components/MobileNav.astro';

type Props = CollectionEntry<'blog'>['data'];
const { title, pubDate, updatedDate, heroImage, category, tags } = Astro.props;

const blog = await getCollection('blog');
// Tags
const tagsSet = new Set();
blog.forEach(post => {
  post.data.tags.forEach(tag => {
    tagsSet.add(tag);
  });
});

---

<Layout>
	<main class="max-w-6xl mx-auto p-3 md:p-6 lg:p-12 lg:flex lg:grid lg:grid-cols-4">
		<article class="lg:col-span-3 bg-white drop-shadow rounded-lg p-3 md:p-6">
			<h1 class="text-3xl font-bold mb-4">{title}</h1>
			<div class="block sm:flex items-center gap-1 mb-4">
				<div class="flex gap-1 items-center text-sm text-neutral-500 mr-1">
					<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M21 10H3M16 2V6M8 2V6M7.8 22H16.2C17.8802 22 18.7202 22 19.362 21.673C19.9265 21.3854 20.3854 20.9265 20.673 20.362C21 19.7202 21 18.8802 21 17.2V8.8C21 7.11984 21 6.27976 20.673 5.63803C20.3854 5.07354 19.9265 4.6146 19.362 4.32698C18.7202 4 17.8802 4 16.2 4H7.8C6.11984 4 5.27976 4 4.63803 4.32698C4.07354 4.6146 3.6146 5.07354 3.32698 5.63803C3 6.27976 3 7.11984 3 8.8V17.2C3 18.8802 3 19.7202 3.32698 20.362C3.6146 20.9265 4.07354 21.3854 4.63803 21.673C5.27976 22 6.11984 22 7.8 22Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
					</svg>
					<FormattedDate date={pubDate} />
					{
						updatedDate && (
							<div class="last-updated-on">
								Last updated on <FormattedDate date={updatedDate} />
							</div>
						)
					}
				</div>
				<div class="flex">
					<div class="flex gap-1 items-center text-sm text-neutral-500 mr-1">
						<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path d="M13 7L11.8845 4.76892C11.5634 4.1268 11.4029 3.80573 11.1634 3.57116C10.9516 3.36373 10.6963 3.20597 10.4161 3.10931C10.0992 3 9.74021 3 9.02229 3H5.2C4.0799 3 3.51984 3 3.09202 3.21799C2.71569 3.40973 2.40973 3.71569 2.21799 4.09202C2 4.51984 2 5.0799 2 6.2V7M2 7H17.2C18.8802 7 19.7202 7 20.362 7.32698C20.9265 7.6146 21.3854 8.07354 21.673 8.63803C22 9.27976 22 10.1198 22 11.8V16.2C22 17.8802 22 18.7202 21.673 19.362C21.3854 19.9265 20.9265 20.3854 20.362 20.673C19.7202 21 18.8802 21 17.2 21H6.8C5.11984 21 4.27976 21 3.63803 20.673C3.07354 20.3854 2.6146 19.9265 2.32698 19.362C2 18.7202 2 17.8802 2 16.2V7Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
						</svg>
						{category}
					</div>
					<span class="text-sm text-neutral-500">#{tags.join(' #')}</span>
				</div>
			</div>
			<div class="mx-auto mb-6">
				{heroImage && <img class="w-full block" src={heroImage} alt="" />}
			</div>
			<div class="prose md:px-6">
				<slot />
			</div>
		</article>
		<Aside />
		<MobileNav />
	</main>
</Layout>
